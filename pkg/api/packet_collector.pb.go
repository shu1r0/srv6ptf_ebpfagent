// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: packet_collector.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// Collect mode
type CollectMode int32

const (
	CollectMode_UNKNOWN_MODE CollectMode = 0
	CollectMode_PACKET       CollectMode = 1
	CollectMode_PACKET_ID    CollectMode = 2
)

// Enum value maps for CollectMode.
var (
	CollectMode_name = map[int32]string{
		0: "UNKNOWN_MODE",
		1: "PACKET",
		2: "PACKET_ID",
	}
	CollectMode_value = map[string]int32{
		"UNKNOWN_MODE": 0,
		"PACKET":       1,
		"PACKET_ID":    2,
	}
)

func (x CollectMode) Enum() *CollectMode {
	p := new(CollectMode)
	*p = x
	return p
}

func (x CollectMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectMode) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_collector_proto_enumTypes[0].Descriptor()
}

func (CollectMode) Type() protoreflect.EnumType {
	return &file_packet_collector_proto_enumTypes[0]
}

func (x CollectMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectMode.Descriptor instead.
func (CollectMode) EnumDescriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{0}
}

//*
// eBPF Hook point
type EBPFHook int32

const (
	EBPFHook_UNKNOWN_HOOK  EBPFHook = 0
	EBPFHook_XDP           EBPFHook = 1
	EBPFHook_TC_INGRESS    EBPFHook = 2
	EBPFHook_TC_EGRESS     EBPFHook = 3
	EBPFHook_LWT_IN        EBPFHook = 4
	EBPFHook_LWT_XMIT      EBPFHook = 5
	EBPFHook_LWT_OUT       EBPFHook = 6
	EBPFHook_LWT_SEG6LOCAL EBPFHook = 7
)

// Enum value maps for EBPFHook.
var (
	EBPFHook_name = map[int32]string{
		0: "UNKNOWN_HOOK",
		1: "XDP",
		2: "TC_INGRESS",
		3: "TC_EGRESS",
		4: "LWT_IN",
		5: "LWT_XMIT",
		6: "LWT_OUT",
		7: "LWT_SEG6LOCAL",
	}
	EBPFHook_value = map[string]int32{
		"UNKNOWN_HOOK":  0,
		"XDP":           1,
		"TC_INGRESS":    2,
		"TC_EGRESS":     3,
		"LWT_IN":        4,
		"LWT_XMIT":      5,
		"LWT_OUT":       6,
		"LWT_SEG6LOCAL": 7,
	}
)

func (x EBPFHook) Enum() *EBPFHook {
	p := new(EBPFHook)
	*p = x
	return p
}

func (x EBPFHook) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBPFHook) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_collector_proto_enumTypes[1].Descriptor()
}

func (EBPFHook) Type() protoreflect.EnumType {
	return &file_packet_collector_proto_enumTypes[1]
}

func (x EBPFHook) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EBPFHook.Descriptor instead.
func (EBPFHook) EnumDescriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{1}
}

//*
// Packet protocol
type PacketProtocol int32

const (
	PacketProtocol_UNKNOWN_PROTOCOL PacketProtocol = 0
	PacketProtocol_PROTOCOL_ETH     PacketProtocol = 1
	PacketProtocol_PROTOCOL_IPV6    PacketProtocol = 2
)

// Enum value maps for PacketProtocol.
var (
	PacketProtocol_name = map[int32]string{
		0: "UNKNOWN_PROTOCOL",
		1: "PROTOCOL_ETH",
		2: "PROTOCOL_IPV6",
	}
	PacketProtocol_value = map[string]int32{
		"UNKNOWN_PROTOCOL": 0,
		"PROTOCOL_ETH":     1,
		"PROTOCOL_IPV6":    2,
	}
)

func (x PacketProtocol) Enum() *PacketProtocol {
	p := new(PacketProtocol)
	*p = x
	return p
}

func (x PacketProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_collector_proto_enumTypes[2].Descriptor()
}

func (PacketProtocol) Type() protoreflect.EnumType {
	return &file_packet_collector_proto_enumTypes[2]
}

func (x PacketProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketProtocol.Descriptor instead.
func (PacketProtocol) EnumDescriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{2}
}

//*
// PKTID EXTHDR
type PktIdExtHdr int32

const (
	PktIdExtHdr_UNKNOWN_EXTHDR     PktIdExtHdr = 0
	PktIdExtHdr_EXTHDR_ROUTING     PktIdExtHdr = 1
	PktIdExtHdr_EXTHDR_HOPBYHOP    PktIdExtHdr = 2
	PktIdExtHdr_EXTHDR_DESTINATION PktIdExtHdr = 3
)

// Enum value maps for PktIdExtHdr.
var (
	PktIdExtHdr_name = map[int32]string{
		0: "UNKNOWN_EXTHDR",
		1: "EXTHDR_ROUTING",
		2: "EXTHDR_HOPBYHOP",
		3: "EXTHDR_DESTINATION",
	}
	PktIdExtHdr_value = map[string]int32{
		"UNKNOWN_EXTHDR":     0,
		"EXTHDR_ROUTING":     1,
		"EXTHDR_HOPBYHOP":    2,
		"EXTHDR_DESTINATION": 3,
	}
)

func (x PktIdExtHdr) Enum() *PktIdExtHdr {
	p := new(PktIdExtHdr)
	*p = x
	return p
}

func (x PktIdExtHdr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PktIdExtHdr) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_collector_proto_enumTypes[3].Descriptor()
}

func (PktIdExtHdr) Type() protoreflect.EnumType {
	return &file_packet_collector_proto_enumTypes[3]
}

func (x PktIdExtHdr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PktIdExtHdr.Descriptor instead.
func (PktIdExtHdr) EnumDescriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{3}
}

//*
// metadata for Netfilter
type NetFilterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hookpoint string `protobuf:"bytes,1,opt,name=hookpoint,proto3" json:"hookpoint,omitempty"`
}

func (x *NetFilterInfo) Reset() {
	*x = NetFilterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetFilterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetFilterInfo) ProtoMessage() {}

func (x *NetFilterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetFilterInfo.ProtoReflect.Descriptor instead.
func (*NetFilterInfo) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{0}
}

func (x *NetFilterInfo) GetHookpoint() string {
	if x != nil {
		return x.Hookpoint
	}
	return ""
}

//*
// metadata for eBPF
type EBPFInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hookpoint EBPFHook `protobuf:"varint,1,opt,name=hookpoint,proto3,enum=EBPFHook" json:"hookpoint,omitempty"`
}

func (x *EBPFInfo) Reset() {
	*x = EBPFInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EBPFInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EBPFInfo) ProtoMessage() {}

func (x *EBPFInfo) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EBPFInfo.ProtoReflect.Descriptor instead.
func (*EBPFInfo) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{1}
}

func (x *EBPFInfo) GetHookpoint() EBPFHook {
	if x != nil {
		return x.Hookpoint
	}
	return EBPFHook_UNKNOWN_HOOK
}

//*
// Packet and id (for no id packet)
type PacketAndId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet   []byte `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	PacketId uint64 `protobuf:"varint,2,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
}

func (x *PacketAndId) Reset() {
	*x = PacketAndId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketAndId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketAndId) ProtoMessage() {}

func (x *PacketAndId) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketAndId.ProtoReflect.Descriptor instead.
func (*PacketAndId) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{2}
}

func (x *PacketAndId) GetPacket() []byte {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *PacketAndId) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

//*
// packet
type PacketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// packet data
	//
	// Types that are assignable to Data:
	//	*PacketInfo_Packet
	//	*PacketInfo_PacketId
	//	*PacketInfo_PacketAndId
	Data isPacketInfo_Data `protobuf_oneof:"data"`
	// node name (id)
	NodeId uint32 `protobuf:"varint,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// packet sniff timestamp
	Timestamp float64 `protobuf:"fixed64,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// metadata
	//
	// Types that are assignable to Metadata:
	//	*PacketInfo_NetfilterInfo
	//	*PacketInfo_EbpfInfo
	Metadata isPacketInfo_Metadata `protobuf_oneof:"metadata"`
	// packet data protocol
	PacketProtocol PacketProtocol `protobuf:"varint,20,opt,name=packet_protocol,json=packetProtocol,proto3,enum=PacketProtocol" json:"packet_protocol,omitempty"`
	// Target IPv6 Ext protocol
	PktidExthdr PktIdExtHdr `protobuf:"varint,21,opt,name=pktid_exthdr,json=pktidExthdr,proto3,enum=PktIdExtHdr" json:"pktid_exthdr,omitempty"`
}

func (x *PacketInfo) Reset() {
	*x = PacketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInfo) ProtoMessage() {}

func (x *PacketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInfo.ProtoReflect.Descriptor instead.
func (*PacketInfo) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{3}
}

func (m *PacketInfo) GetData() isPacketInfo_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *PacketInfo) GetPacket() []byte {
	if x, ok := x.GetData().(*PacketInfo_Packet); ok {
		return x.Packet
	}
	return nil
}

func (x *PacketInfo) GetPacketId() uint64 {
	if x, ok := x.GetData().(*PacketInfo_PacketId); ok {
		return x.PacketId
	}
	return 0
}

func (x *PacketInfo) GetPacketAndId() *PacketAndId {
	if x, ok := x.GetData().(*PacketInfo_PacketAndId); ok {
		return x.PacketAndId
	}
	return nil
}

func (x *PacketInfo) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *PacketInfo) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (m *PacketInfo) GetMetadata() isPacketInfo_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *PacketInfo) GetNetfilterInfo() *NetFilterInfo {
	if x, ok := x.GetMetadata().(*PacketInfo_NetfilterInfo); ok {
		return x.NetfilterInfo
	}
	return nil
}

func (x *PacketInfo) GetEbpfInfo() *EBPFInfo {
	if x, ok := x.GetMetadata().(*PacketInfo_EbpfInfo); ok {
		return x.EbpfInfo
	}
	return nil
}

func (x *PacketInfo) GetPacketProtocol() PacketProtocol {
	if x != nil {
		return x.PacketProtocol
	}
	return PacketProtocol_UNKNOWN_PROTOCOL
}

func (x *PacketInfo) GetPktidExthdr() PktIdExtHdr {
	if x != nil {
		return x.PktidExthdr
	}
	return PktIdExtHdr_UNKNOWN_EXTHDR
}

type isPacketInfo_Data interface {
	isPacketInfo_Data()
}

type PacketInfo_Packet struct {
	Packet []byte `protobuf:"bytes,1,opt,name=packet,proto3,oneof"`
}

type PacketInfo_PacketId struct {
	PacketId uint64 `protobuf:"varint,2,opt,name=packet_id,json=packetId,proto3,oneof"`
}

type PacketInfo_PacketAndId struct {
	PacketAndId *PacketAndId `protobuf:"bytes,3,opt,name=packet_and_id,json=packetAndId,proto3,oneof"`
}

func (*PacketInfo_Packet) isPacketInfo_Data() {}

func (*PacketInfo_PacketId) isPacketInfo_Data() {}

func (*PacketInfo_PacketAndId) isPacketInfo_Data() {}

type isPacketInfo_Metadata interface {
	isPacketInfo_Metadata()
}

type PacketInfo_NetfilterInfo struct {
	NetfilterInfo *NetFilterInfo `protobuf:"bytes,10,opt,name=netfilterInfo,proto3,oneof"`
}

type PacketInfo_EbpfInfo struct {
	EbpfInfo *EBPFInfo `protobuf:"bytes,11,opt,name=ebpfInfo,proto3,oneof"`
}

func (*PacketInfo_NetfilterInfo) isPacketInfo_Metadata() {}

func (*PacketInfo_EbpfInfo) isPacketInfo_Metadata() {}

//*
// Agent setting
type PollSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId        uint32 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeIdLength  uint32 `protobuf:"varint,3,opt,name=node_id_length,json=nodeIdLength,proto3" json:"node_id_length,omitempty"`
	CounterLength uint32 `protobuf:"varint,4,opt,name=counter_length,json=counterLength,proto3" json:"counter_length,omitempty"`
}

func (x *PollSettingRequest) Reset() {
	*x = PollSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollSettingRequest) ProtoMessage() {}

func (x *PollSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollSettingRequest.ProtoReflect.Descriptor instead.
func (*PollSettingRequest) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{4}
}

func (x *PollSettingRequest) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *PollSettingRequest) GetNodeIdLength() uint32 {
	if x != nil {
		return x.NodeIdLength
	}
	return 0
}

func (x *PollSettingRequest) GetCounterLength() uint32 {
	if x != nil {
		return x.CounterLength
	}
	return 0
}

//*
// eBPF Program Info
type EbpfProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hook EBPFHook `protobuf:"varint,1,opt,name=hook,proto3,enum=EBPFHook" json:"hook,omitempty"`
	Fd   uint64   `protobuf:"varint,2,opt,name=fd,proto3" json:"fd,omitempty"`
}

func (x *EbpfProgramInfo) Reset() {
	*x = EbpfProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EbpfProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EbpfProgramInfo) ProtoMessage() {}

func (x *EbpfProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EbpfProgramInfo.ProtoReflect.Descriptor instead.
func (*EbpfProgramInfo) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{5}
}

func (x *EbpfProgramInfo) GetHook() EBPFHook {
	if x != nil {
		return x.Hook
	}
	return EBPFHook_UNKNOWN_HOOK
}

func (x *EbpfProgramInfo) GetFd() uint64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

//*
// Setting Reply
type PollSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PollSettingReply) Reset() {
	*x = PollSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollSettingReply) ProtoMessage() {}

func (x *PollSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollSettingReply.ProtoReflect.Descriptor instead.
func (*PollSettingReply) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{6}
}

//*
// Packet Request
type PacketInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PacketInfoRequest) Reset() {
	*x = PacketInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInfoRequest) ProtoMessage() {}

func (x *PacketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInfoRequest.ProtoReflect.Descriptor instead.
func (*PacketInfoRequest) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{7}
}

//*
// Packet Info Reqly
type PacketInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketInfos []*PacketInfo `protobuf:"bytes,1,rep,name=packet_infos,json=packetInfos,proto3" json:"packet_infos,omitempty"`
}

func (x *PacketInfoReply) Reset() {
	*x = PacketInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInfoReply) ProtoMessage() {}

func (x *PacketInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInfoReply.ProtoReflect.Descriptor instead.
func (*PacketInfoReply) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{8}
}

func (x *PacketInfoReply) GetPacketInfos() []*PacketInfo {
	if x != nil {
		return x.PacketInfos
	}
	return nil
}

//*
// eBPF Program Info Request
type EbpfProgramInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EbpfProgramInfoRequest) Reset() {
	*x = EbpfProgramInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EbpfProgramInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EbpfProgramInfoRequest) ProtoMessage() {}

func (x *EbpfProgramInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EbpfProgramInfoRequest.ProtoReflect.Descriptor instead.
func (*EbpfProgramInfoRequest) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{9}
}

//*
// eBPF Program Info Reply
type EbpfProgramInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Programs []*EbpfProgramInfo `protobuf:"bytes,1,rep,name=programs,proto3" json:"programs,omitempty"`
}

func (x *EbpfProgramInfoReply) Reset() {
	*x = EbpfProgramInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EbpfProgramInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EbpfProgramInfoReply) ProtoMessage() {}

func (x *EbpfProgramInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EbpfProgramInfoReply.ProtoReflect.Descriptor instead.
func (*EbpfProgramInfoReply) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{10}
}

func (x *EbpfProgramInfoReply) GetPrograms() []*EbpfProgramInfo {
	if x != nil {
		return x.Programs
	}
	return nil
}

//*
// NotifyPacket Request
type PacketInfoStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptureAllPackets bool   `protobuf:"varint,1,opt,name=capture_all_packets,json=captureAllPackets,proto3" json:"capture_all_packets,omitempty"`
	NodeId            uint32 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeIdLength      uint32 `protobuf:"varint,3,opt,name=node_id_length,json=nodeIdLength,proto3" json:"node_id_length,omitempty"`
	CounterLength     uint32 `protobuf:"varint,4,opt,name=counter_length,json=counterLength,proto3" json:"counter_length,omitempty"`
}

func (x *PacketInfoStreamRequest) Reset() {
	*x = PacketInfoStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_collector_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketInfoStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInfoStreamRequest) ProtoMessage() {}

func (x *PacketInfoStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_collector_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInfoStreamRequest.ProtoReflect.Descriptor instead.
func (*PacketInfoStreamRequest) Descriptor() ([]byte, []int) {
	return file_packet_collector_proto_rawDescGZIP(), []int{11}
}

func (x *PacketInfoStreamRequest) GetCaptureAllPackets() bool {
	if x != nil {
		return x.CaptureAllPackets
	}
	return false
}

func (x *PacketInfoStreamRequest) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *PacketInfoStreamRequest) GetNodeIdLength() uint32 {
	if x != nil {
		return x.NodeIdLength
	}
	return 0
}

func (x *PacketInfoStreamRequest) GetCounterLength() uint32 {
	if x != nil {
		return x.CounterLength
	}
	return 0
}

var File_packet_collector_proto protoreflect.FileDescriptor

var file_packet_collector_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6f,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f,
	0x6f, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x08, 0x45, 0x42, 0x50, 0x46, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x45, 0x42, 0x50, 0x46, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x0b,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x90, 0x03, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0d, 0x6e, 0x65,
	0x74, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x08, 0x65,
	0x62, 0x70, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x45, 0x42, 0x50, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x08, 0x65, 0x62, 0x70, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2f,
	0x0a, 0x0c, 0x70, 0x6b, 0x74, 0x69, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x68, 0x64, 0x72, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x50, 0x6b, 0x74, 0x49, 0x64, 0x45, 0x78, 0x74, 0x48,
	0x64, 0x72, 0x52, 0x0b, 0x70, 0x6b, 0x74, 0x69, 0x64, 0x45, 0x78, 0x74, 0x68, 0x64, 0x72, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x12, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22,
	0x40, 0x0a, 0x0f, 0x45, 0x62, 0x70, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x45, 0x42, 0x50, 0x46, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x68, 0x6f, 0x6f,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x66,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x0f, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x45, 0x62, 0x70, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x45, 0x62, 0x70, 0x66, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x45, 0x62, 0x70, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xaf, 0x01,
	0x0a, 0x17, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2a,
	0x3a, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x7e, 0x0a, 0x08, 0x45,
	0x42, 0x50, 0x46, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x44, 0x50,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x43, 0x5f, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x43, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x57, 0x54, 0x5f, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x57, 0x54, 0x5f, 0x58, 0x4d, 0x49, 0x54, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4c,
	0x57, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x57, 0x54, 0x5f,
	0x53, 0x45, 0x47, 0x36, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x07, 0x2a, 0x4b, 0x0a, 0x0e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f,
	0x45, 0x54, 0x48, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x10, 0x02, 0x2a, 0x62, 0x0a, 0x0b, 0x50, 0x6b, 0x74, 0x49,
	0x64, 0x45, 0x78, 0x74, 0x48, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x58, 0x54, 0x48, 0x44, 0x52, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45,
	0x58, 0x54, 0x48, 0x44, 0x52, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x58, 0x54, 0x48, 0x44, 0x52, 0x5f, 0x48, 0x4f, 0x50, 0x42, 0x59, 0x48,
	0x4f, 0x50, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x58, 0x54, 0x48, 0x44, 0x52, 0x5f, 0x44,
	0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x32, 0x8e, 0x02, 0x0a,
	0x14, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c,
	0x12, 0x13, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x62, 0x70, 0x66, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x45, 0x62, 0x70, 0x66,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x45, 0x62, 0x70, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x18, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0b, 0x5a,
	0x09, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_packet_collector_proto_rawDescOnce sync.Once
	file_packet_collector_proto_rawDescData = file_packet_collector_proto_rawDesc
)

func file_packet_collector_proto_rawDescGZIP() []byte {
	file_packet_collector_proto_rawDescOnce.Do(func() {
		file_packet_collector_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_collector_proto_rawDescData)
	})
	return file_packet_collector_proto_rawDescData
}

var file_packet_collector_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_packet_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_packet_collector_proto_goTypes = []interface{}{
	(CollectMode)(0),                // 0: CollectMode
	(EBPFHook)(0),                   // 1: EBPFHook
	(PacketProtocol)(0),             // 2: PacketProtocol
	(PktIdExtHdr)(0),                // 3: PktIdExtHdr
	(*NetFilterInfo)(nil),           // 4: NetFilterInfo
	(*EBPFInfo)(nil),                // 5: EBPFInfo
	(*PacketAndId)(nil),             // 6: PacketAndId
	(*PacketInfo)(nil),              // 7: PacketInfo
	(*PollSettingRequest)(nil),      // 8: PollSettingRequest
	(*EbpfProgramInfo)(nil),         // 9: EbpfProgramInfo
	(*PollSettingReply)(nil),        // 10: PollSettingReply
	(*PacketInfoRequest)(nil),       // 11: PacketInfoRequest
	(*PacketInfoReply)(nil),         // 12: PacketInfoReply
	(*EbpfProgramInfoRequest)(nil),  // 13: EbpfProgramInfoRequest
	(*EbpfProgramInfoReply)(nil),    // 14: EbpfProgramInfoReply
	(*PacketInfoStreamRequest)(nil), // 15: PacketInfoStreamRequest
}
var file_packet_collector_proto_depIdxs = []int32{
	1,  // 0: EBPFInfo.hookpoint:type_name -> EBPFHook
	6,  // 1: PacketInfo.packet_and_id:type_name -> PacketAndId
	4,  // 2: PacketInfo.netfilterInfo:type_name -> NetFilterInfo
	5,  // 3: PacketInfo.ebpfInfo:type_name -> EBPFInfo
	2,  // 4: PacketInfo.packet_protocol:type_name -> PacketProtocol
	3,  // 5: PacketInfo.pktid_exthdr:type_name -> PktIdExtHdr
	1,  // 6: EbpfProgramInfo.hook:type_name -> EBPFHook
	7,  // 7: PacketInfoReply.packet_infos:type_name -> PacketInfo
	9,  // 8: EbpfProgramInfoReply.programs:type_name -> EbpfProgramInfo
	8,  // 9: PacketCollectService.SetPoll:input_type -> PollSettingRequest
	11, // 10: PacketCollectService.GetPacketInfo:input_type -> PacketInfoRequest
	13, // 11: PacketCollectService.GetEbpfProgramInfo:input_type -> EbpfProgramInfoRequest
	15, // 12: PacketCollectService.GetPacketInfoStream:input_type -> PacketInfoStreamRequest
	10, // 13: PacketCollectService.SetPoll:output_type -> PollSettingReply
	12, // 14: PacketCollectService.GetPacketInfo:output_type -> PacketInfoReply
	14, // 15: PacketCollectService.GetEbpfProgramInfo:output_type -> EbpfProgramInfoReply
	7,  // 16: PacketCollectService.GetPacketInfoStream:output_type -> PacketInfo
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_packet_collector_proto_init() }
func file_packet_collector_proto_init() {
	if File_packet_collector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packet_collector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetFilterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EBPFInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketAndId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EbpfProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EbpfProgramInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EbpfProgramInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_collector_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketInfoStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packet_collector_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*PacketInfo_Packet)(nil),
		(*PacketInfo_PacketId)(nil),
		(*PacketInfo_PacketAndId)(nil),
		(*PacketInfo_NetfilterInfo)(nil),
		(*PacketInfo_EbpfInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_collector_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_packet_collector_proto_goTypes,
		DependencyIndexes: file_packet_collector_proto_depIdxs,
		EnumInfos:         file_packet_collector_proto_enumTypes,
		MessageInfos:      file_packet_collector_proto_msgTypes,
	}.Build()
	File_packet_collector_proto = out.File
	file_packet_collector_proto_rawDesc = nil
	file_packet_collector_proto_goTypes = nil
	file_packet_collector_proto_depIdxs = nil
}
